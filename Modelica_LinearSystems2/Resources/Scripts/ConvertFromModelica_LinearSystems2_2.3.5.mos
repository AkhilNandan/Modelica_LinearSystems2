// Generated by conversion of Modelica_LinearSystems2
convertElement("Modelica_LinearSystems2.Controller.Examples.Interpolator","sine.freqHz","sine.f");
convertElement("Modelica_LinearSystems2.Controller.Examples.DoublePendulum","plant.doublePendulum.world.mue","plant.doublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulum","plant.inverseDoublePendulum.relativeVelocity.tansformRelativeVector","plant.inverseDoublePendulum.relativeVelocity.transformRelativeVector");
convertModifiers("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulum",{"plant.inverseDoublePendulum.torque.torqueDiameter"},{"plant.inverseDoublePendulum.torque.connectionLineDiameter=%plant.inverseDoublePendulum.torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulum","plant.inverseDoublePendulum.world.mue","plant.inverseDoublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulumWithObserver","plant.inverseDoublePendulum.relativeVelocity.tansformRelativeVector","plant.inverseDoublePendulum.relativeVelocity.transformRelativeVector");
convertModifiers("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulumWithObserver",{"plant.inverseDoublePendulum.torque.torqueDiameter"},{"plant.inverseDoublePendulum.torque.connectionLineDiameter=%plant.inverseDoublePendulum.torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Controller.Examples.InverseDoublePendulumWithObserver","plant.inverseDoublePendulum.world.mue","plant.inverseDoublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.DoublePendulum","relativeVelocity.tansformRelativeVector","relativeVelocity.transformRelativeVector");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.DoublePendulum","world.mue","world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.DoublePendulum2","doublePendulum.world.mue","doublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum","relativeVelocity.tansformRelativeVector","relativeVelocity.transformRelativeVector");
convertModifiers("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum",{"torque.torqueDiameter"},{"torque.connectionLineDiameter=%torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum","world.mue","world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum2","inverseDoublePendulum.relativeVelocity.tansformRelativeVector","inverseDoublePendulum.relativeVelocity.transformRelativeVector");
convertModifiers("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum2",{"inverseDoublePendulum.torque.torqueDiameter"},{"inverseDoublePendulum.torque.connectionLineDiameter=%inverseDoublePendulum.torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum2","inverseDoublePendulum.world.mue","inverseDoublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum3","inverseDoublePendulum.relativeVelocity.tansformRelativeVector","inverseDoublePendulum.relativeVelocity.transformRelativeVector");
convertModifiers("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum3",{"inverseDoublePendulum.torque.torqueDiameter"},{"inverseDoublePendulum.torque.connectionLineDiameter=%inverseDoublePendulum.torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Controller.Examples.Components.InverseDoublePendulum3","inverseDoublePendulum.world.mue","inverseDoublePendulum.world.mu");
convertElement("Modelica_LinearSystems2.Utilities.Plants.DoublePendulum","world.mue","world.mu");
convertModifiers("Modelica_LinearSystems2.Utilities.Plants.DoublePendulumInverse",{"torque.torqueDiameter"},{"torque.connectionLineDiameter=%torque.torqueDiameter%"});
convertElement("Modelica_LinearSystems2.Utilities.Plants.DoublePendulumInverse","world.mue","world.mu");
convertElement("Modelica_LinearSystems2.WorkInProgress.Controller.Examples.limIntegrator","sine.freqHz","sine.f");
convertElement("Modelica_LinearSystems2.WorkInProgress.Tests.temp.testModel","sine.freqHz","sine.f");
